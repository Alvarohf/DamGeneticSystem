#pragma checksum "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a7fe64d2968c5e2f6dcc141480eab9ba34eab2b3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\_ViewImports.cshtml"
using GeneticDams;

#line default
#line hidden
#line 2 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\_ViewImports.cshtml"
using GeneticDams.Models;

#line default
#line hidden
#line 1 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
using GeneticDams.BLL;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a7fe64d2968c5e2f6dcc141480eab9ba34eab2b3", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f5f14f39e0ee9d323cecdcafbbffff8576e7383c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/signalr/dist/browser/signalr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(63, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(163, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 7 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Genetic Dam System";
    //ConcreteAggregate a = new ConcreteAggregate();
    MapAggregate maps = new MapAggregate();
    SingleFactoryMap factory = SingleFactoryMap.GetInstance();
    factory.GetMap(1, "maps/map.json").geometryType();

    maps[0] = factory.GetMap(0, "maps/map.json");
    maps[1] = factory.GetMap(1, "maps/map10m.json");
    maps[2] = factory.GetMap(1, "maps/map25m.json");
    maps[3] = factory.GetMap(1, "maps/map25m2.json");
    MapIterator mapIterator = maps.CreateIterator();
    int j = 2;
    int i = 2;

#line default
#line hidden
            BeginContext(740, 391, true);
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Genetic Dam System <i class=""fas fa-dna""></i></h1>
    <p>This project finds the best spot in a topographic map to put a dam with genetic algorithms</p>
</div>
<div class=""row"">
    <div class=""col-10"">
        <div id=""myDiv"" style=""width:100%;height:400px;""></div>
    </div>
    <div class=""form-group col-2"">
        <div>
");
            EndContext();
            BeginContext(1147, 205, true);
            WriteLiteral("                        <div id=\"dataMap_1\" class=\"d-none\">\r\n                            <p><b>Map data <i class=\"fas fa-layer-group mt-3\"></i></b></p>\r\n                            <pre class=\"text-muted\">");
            EndContext();
            BeginContext(1353, 36, false);
#line 36 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                                               Write(mapIterator.First().getInformation());

#line default
#line hidden
            EndContext();
            BeginContext(1389, 58, true);
            WriteLiteral("</pre>\r\n                            <p><b>Min height:</b> ");
            EndContext();
            BeginContext(1448, 31, false);
#line 37 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                                             Write(mapIterator.First().MinHeight());

#line default
#line hidden
            EndContext();
            BeginContext(1479, 115, true);
            WriteLiteral("<i class=\"fas fa-long-arrow-alt-down text-danger ml-2\"></i></p>\r\n                            <p><b>Max height:</b> ");
            EndContext();
            BeginContext(1595, 31, false);
#line 38 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                                             Write(mapIterator.First().MaxHeight());

#line default
#line hidden
            EndContext();
            BeginContext(1626, 96, true);
            WriteLiteral("<i class=\"fas fa-long-arrow-alt-up text-success ml-2\"></i></p>\r\n                        </div>\r\n");
            EndContext();
#line 40 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                 while (maps.Count +1> j)
                {

#line default
#line hidden
            BeginContext(1784, 24, true);
            WriteLiteral("                    <div");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1808, "\"", 1823, 2);
            WriteAttributeValue("", 1813, "dataMap_", 1813, 8, true);
#line 42 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 1821, j, 1821, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1824, 156, true);
            WriteLiteral(" class=\"d-none\">\r\n                        <pre class=\"text-muted\"><b>Map data <i class=\"fas fa-layer-group mt-3\"></i></b></pre>\r\n                        <p>");
            EndContext();
            BeginContext(1981, 35, false);
#line 44 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                      Write(mapIterator.Next().getInformation());

#line default
#line hidden
            EndContext();
            BeginContext(2016, 52, true);
            WriteLiteral("</p>\r\n                        <p><b>Min height:</b> ");
            EndContext();
            BeginContext(2069, 35, false);
#line 45 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                                         Write(mapIterator.CurrentItem.MinHeight());

#line default
#line hidden
            EndContext();
            BeginContext(2104, 111, true);
            WriteLiteral("<i class=\"fas fa-long-arrow-alt-down text-danger ml-2\"></i></p>\r\n                        <p><b>Max height:</b> ");
            EndContext();
            BeginContext(2216, 35, false);
#line 46 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                                         Write(mapIterator.CurrentItem.MaxHeight());

#line default
#line hidden
            EndContext();
            BeginContext(2251, 92, true);
            WriteLiteral("<i class=\"fas fa-long-arrow-alt-up text-success ml-2\"></i></p>\r\n                    </div>\r\n");
            EndContext();
#line 48 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                    j++;
                }

#line default
#line hidden
            BeginContext(2403, 63, true);
            WriteLiteral("        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<p id=\"info-box\"></p>\r\n");
            EndContext();
            BeginContext(2470, 287, true);
            WriteLiteral(@"    <nav>
        <div class=""row"">
            <input type=""button"" class=""btn btn-primary mb-3 mr-3"" value=""Click to display map"" onclick=""startMap('maps/map.json','1')"" />
            <ul class=""pagination col-md-8"" id=""mapNav"">
                <li id=""map_1"" class=""page-item""><a");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2757, "\"", 2792, 1);
#line 62 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 2762, mapIterator.First().MapString, 2762, 30, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2793, 76, true);
            WriteLiteral(" href=\"#\" class=\"page-link\" onclick=\"startMap(this.id,\'1\')\">map_1</a></li>\r\n");
            EndContext();
#line 63 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                 while (maps.Count + 1 > i)
                {

#line default
#line hidden
            BeginContext(2933, 23, true);
            WriteLiteral("                    <li");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2956, "\"", 2967, 2);
            WriteAttributeValue("", 2961, "map_", 2961, 4, true);
#line 65 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 2965, i, 2965, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2968, 21, true);
            WriteLiteral(" class=\"page-item\"><a");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2989, "\"", 3023, 1);
#line 65 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 2994, mapIterator.Next().MapString, 2994, 29, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3024, 27, true);
            WriteLiteral(" href=\"#\" class=\"page-link\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 3051, "\"", 3083, 3);
            WriteAttributeValue("", 3061, "startMap(this.id,\'", 3061, 18, true);
#line 65 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 3079, i, 3079, 2, false);

#line default
#line hidden
            WriteAttributeValue("", 3081, "\')", 3081, 2, true);
            EndWriteAttribute();
            BeginContext(3084, 5, true);
            WriteLiteral(">map_");
            EndContext();
            BeginContext(3090, 1, false);
#line 65 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                                                                                                                                                       Write(i);

#line default
#line hidden
            EndContext();
            BeginContext(3091, 11, true);
            WriteLiteral("</a></li>\r\n");
            EndContext();
#line 66 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                    i++;
                }

#line default
#line hidden
            BeginContext(3147, 76, true);
            WriteLiteral("            </ul>\r\n            <button class=\"btn btn-success h-50 d-inline\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 3223, "\"", 3350, 11);
            WriteAttributeValue("", 3233, "location.href=\'", 3233, 15, true);
#line 69 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 3248, Url.Action("Download", "Home"), 3248, 31, false);

#line default
#line hidden
            WriteAttributeValue("", 3279, "?fileName=\'", 3279, 11, true);
            WriteAttributeValue(" ", 3290, "+", 3291, 2, true);
            WriteAttributeValue(" ", 3292, "getFile()+", 3293, 11, true);
            WriteAttributeValue(" ", 3303, "\'&login=\'", 3304, 10, true);
            WriteAttributeValue(" ", 3313, "+", 3314, 2, true);
            WriteAttributeValue(" ", 3315, "\'", 3316, 2, true);
#line 69 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 3317, SignInManager.IsSignedIn(User), 3317, 31, false);

#line default
#line hidden
            WriteAttributeValue("", 3348, "\'", 3348, 1, true);
            WriteAttributeValue(" ", 3349, "", 3350, 1, true);
            EndWriteAttribute();
            BeginContext(3351, 92, true);
            WriteLiteral(" download> Download <i class=\"fas fa-download\"></i></button>\r\n        </div>\r\n\r\n    </nav>\r\n");
            EndContext();
#line 74 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
 if (ViewData["Error"] != null)
{

#line default
#line hidden
            BeginContext(3482, 270, true);
            WriteLiteral(@"    <div id=""alert"" class=""alert alert-danger"" role=""alert"">
        Error downloading your map, because you are not logged in or you have not displayed a map. <i class=""fas fa-exclamation-triangle""></i>
        <button type=""button"" class=""close"" data-dismiss=""alert""");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 3752, "\"", 3806, 3);
            WriteAttributeValue("", 3762, "location.href=\'", 3762, 15, true);
#line 78 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 3777, Url.Action("Index", "Home"), 3777, 28, false);

#line default
#line hidden
            WriteAttributeValue("", 3805, "\'", 3805, 1, true);
            EndWriteAttribute();
            BeginContext(3807, 31, true);
            WriteLiteral(">&times;</button>\r\n    </div>\r\n");
            EndContext();
#line 80 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
    { ViewData["Error"] = null; }
}

#line default
#line hidden
            BeginContext(3876, 291, true);
            WriteLiteral(@"<div class=""container"">
    <div class=""row"">
        <div class=""row col-7"">
            <input type=""button"" id=""sendButton"" class=""btn btn-success mb-3 mr-4  col-4"" value=""Start Algorithm"" />
            <select class=""form-control col-3 ml-"" id=""algorithmSelector"">
                ");
            EndContext();
            BeginContext(4167, 22, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a7fe64d2968c5e2f6dcc141480eab9ba34eab2b316162", async() => {
                BeginContext(4175, 5, true);
                WriteLiteral("Hills");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4189, 18, true);
            WriteLiteral("\r\n                ");
            EndContext();
            BeginContext(4207, 24, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a7fe64d2968c5e2f6dcc141480eab9ba34eab2b317354", async() => {
                BeginContext(4215, 7, true);
                WriteLiteral("Valleys");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4231, 117, true);
            WriteLiteral("\r\n            </select>\r\n            <select class=\"form-control col-3 ml-4\" id=\"strategySelector\">\r\n                ");
            EndContext();
            BeginContext(4348, 22, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a7fe64d2968c5e2f6dcc141480eab9ba34eab2b318656", async() => {
                BeginContext(4356, 5, true);
                WriteLiteral("Elite");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4370, 18, true);
            WriteLiteral("\r\n                ");
            EndContext();
            BeginContext(4388, 25, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a7fe64d2968c5e2f6dcc141480eab9ba34eab2b319848", async() => {
                BeginContext(4396, 8, true);
                WriteLiteral("Roulette");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4413, 270, true);
            WriteLiteral(@"
            </select>
        </div>
        <fieldset class=""col-5"">
            <div class=""form-group ml-3"">
                <input type=""text"" id=""result"" class=""form-control"" placeholder=""Result"">
            </div>
        </fieldset>
    </div>
</div>
");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(4701, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(4707, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a7fe64d2968c5e2f6dcc141480eab9ba34eab2b321486", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4768, 9328, true);
                WriteLiteral(@"
    <script>
        function getFile() {
            fileName = null;
            var elements = document.getElementById(""mapNav"").getElementsByTagName(""li"");
            for (var i = 0; i < elements.length; i++) {
                console.log(elements[i])
                if (elements[i].classList.contains(""active"")) {
                    fileName = elements[i].firstChild.id;
                    console.log(fileName);
                }
            }

            return fileName;
        }
        var MapBounds;
        var map;
        var mainMarker;
        var markers;
        var allIcons;
        function startMap(name, li_id) {
            // We remove active button
            var elements = document.getElementById(""mapNav"").getElementsByTagName(""li"");
            for (var i = 0; i < elements.length; i++) {
                elements[i].classList.remove(""active"");
            }
            //We hide all the data
            var datas = document.querySelectorAll('[id^=""dataMap""");
                WriteLiteral(@"]');
            for (var i = 0; i < elements.length; i++) {
                datas[i].classList.add(""d-none"");
            }
            // We add new active button
            var element = document.getElementById(""map_""+li_id);
            element.classList.toggle(""active"");
            var element = document.getElementById(""dataMap_""+li_id);
            element.classList.remove(""d-none"");
            displayGoogleMap(name);
        }
        function displayGoogleMap(name) {
            // Init map
            map = new google.maps.Map(document.getElementById('myDiv'), {
                zoom: 6,
                center: { lat: 40.687, lng: -1.996 }
            });
            // Set initial bounds
            bounds = new google.maps.LatLngBounds();
            // Load icons of the markers
            var icons = {
                dam: {
                    icon: ""/res/dam_red.png""
                },
                good: {
                    icon: ""/res/good-spot2.png""
          ");
                WriteLiteral(@"      }
            };
            allIcons = icons;
            // Load GeoJSON
            mapJson(map, name)
            // Custom the map colors
            map.data.setStyle(function (feature) {
                var color = feature.getProperty('stroke');
                return {
                    clickable: true,
                    fillColor: color,
                    strokeWeight: 1
                }
            });

            // Point of the marker
            var point = {
                position: new google.maps.LatLng(40.687, -1.996),
                type: 'dam'
            };
            // Display the marker
            mainMarker = placeMarker(point.position, icons, point.type);


            // Center map in the middle
            map.data.addListener('addfeature', function (e) {
                processPoints(e.feature.getGeometry(), bounds.extend, bounds);
                MapBounds = bounds;
                map.setCenter(bounds.getCenter());
                ma");
                WriteLiteral(@"p.fitBounds(bounds);
                changeMarkerPosition(mainMarker, map.center);
            });
            map.fitBounds(bounds);
            map.panToBounds(bounds);
            console.log(bounds)
            // Get data from the layers
            map.data.addListener('mouseover', function (event) {
                document.getElementById('info-box').textContent = ""Elevation: "" +
                    event.feature.getProperty('elevation')+ "" Coords: ""+ event.latLng;
            });

            // Change marker position
            map.data.addListener('click', function (event) {
                changeMarkerPosition(mainMarker, event.latLng);
                floodMap(map, event.feature.getProperty('elevation'));
            });

        }

        // Reset map colours
        function restartMap(map) {
            map.data.setStyle(function (feature) {
                var color = feature.getProperty('stroke');
                return {
                    clickable: true,
      ");
                WriteLiteral(@"              fillColor: color,
                    strokeWeight: 1
                }
            });
        }
        // Add water layer
        function floodMap(map, elevation) {
            restartMap(map);
            map.data.setStyle(function (feature) {
                var color = feature.getProperty('stroke');
                var polygon = feature.getGeometry();
                var area = google.maps.geometry.spherical.computeArea(polygon);
                console.log(area);
                if (feature.getProperty(""elevation"") <= parseInt(elevation)) {
                    color = ""#08006C"";
                }
                return {
                    clickable: true,
                    fillColor: color,
                    strokeWeight: 1
                }
            });
        }
        // Process the points to center the map
        function processPoints(geometry, callback, thisArg) {
            if (geometry instanceof google.maps.LatLng) {
                callback");
                WriteLiteral(@".call(thisArg, geometry);
            } else if (geometry instanceof google.maps.Data.Point) {
                callback.call(thisArg, geometry.get());
            } else {
                geometry.getArray().forEach(function (g) {
                    processPoints(g, callback, thisArg);
                });
            }
        }
        // Load GeoJson Map and calculate area
        function mapJson(map, name) {
            console.log(document.location.origin + ""/"" + name)
            map.data.loadGeoJson(
                document.location.origin + ""/"" + name, {},
                );
        }
        // Set a marker in the map
        function placeMarker(location, icons, typeIcon) {
            return new google.maps.Marker({
                position: location,
                icon: icons[typeIcon].icon,
                map: map
            });
        }
        // Update marker in the map
        function changeMarkerPosition(marker, location) {
            marker.setPosition(loc");
                WriteLiteral(@"ation);
        }

        // Connect to signalR to share data
        var connection = new signalR.HubConnectionBuilder().withUrl(""/chatHub"").build();

        //Disable send button until connection is established
        document.getElementById(""sendButton"").disabled = true;

        // Receive data from the server
        var _locations;
        var markers = [];
        connection.on(""ReceiveMessage"", function (locations, message) {
             clearMarkers();
            _locations = locations;
            var msg = message.replace(/&/g, ""&amp;"").replace(/</g, ""&lt;"").replace(/>/g, ""&gt;"");
            document.getElementById(""result"").value = message;
            var i = 0;
            initMarkers(20);
            while (i < locations.length - 1) {

                for (var j = 1; j < locations[0].length - 1; j++) {
                    restMarkerTimeout(i, j, markers[j]);
                }
                mainMarkerTimeout(i);
                i++;

            }
        });");
                WriteLiteral(@"

        function initMarkers(quantity) {
            for (var i = 0; i < quantity; i++) {
                markers[i] = placeMarker(null, allIcons, ""good"")
            }

        }
        function clearMarkers() {
            for (var i = 0; i < markers.length; i++) {
                  markers[i].setMap(null);
            }
        }
        function mainMarkerTimeout(i) {
            console.log(""Principal"" + _locations[i][0])
            setTimeout(function () { changeMarkerPosition(mainMarker, _locations[i][0]); }, i * 1000);
        }
        function restMarkerTimeout(i, j, marker) {
            console.log(""Principal"" + _locations[i][j])
            setTimeout(function () { changeMarkerPosition(marker, _locations[i][j]); }, i * 800);
        }
        // Start connection on click
        connection.start().then(function () {
            document.getElementById(""sendButton"").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
  ");
                WriteLiteral(@"      });


    // Send data to the server
    document.getElementById(""sendButton"").addEventListener(""click"", function (event) {

            var selection = document.getElementById(""algorithmSelector"");
            var typeAlgorithm = selection.options[selection.selectedIndex].value;
            var strategy = document.getElementById(""strategySelector"");
            var typeStrategy = selection.options[strategy.selectedIndex].value;
            console.log(MapBounds)
            if (MapBounds !== undefined) {
                document.getElementById(""result"").classList.remove(""text-danger"");
                var message = MapBounds.toString();
                connection.invoke(""SendMessage"",typeStrategy, typeAlgorithm, message).catch(function (err) {
                    return console.error(err.toString());
                });
            } else {
                document.getElementById(""result"").classList.add(""text-danger"");
                document.getElementById(""result"").value = ""You ne");
                WriteLiteral("ed to load the map first\";\r\n            }\r\n            event.preventDefault();\r\n        });\r\n\r\n    </script>\r\n\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<IdentityUser> UserManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SignInManager<IdentityUser> SignInManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
