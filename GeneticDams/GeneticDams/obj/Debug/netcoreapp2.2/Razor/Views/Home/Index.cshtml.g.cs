#pragma checksum "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fd22b401f6ee3b7ca658766bef1e926e684a73c4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\_ViewImports.cshtml"
using GeneticDams;

#line default
#line hidden
#line 2 "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\_ViewImports.cshtml"
using GeneticDams.Models;

#line default
#line hidden
#line 1 "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
using GeneticDams.BLL;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fd22b401f6ee3b7ca658766bef1e926e684a73c4", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f5f14f39e0ee9d323cecdcafbbffff8576e7383c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/signalr/dist/browser/signalr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(63, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(163, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 7 "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Genetic Dam System";

#line default
#line hidden
            BeginContext(219, 551, true);
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Genetic Dam System <i class=""fas fa-dna""></i></h1>
    <p>This project finds the best spot in a topographic map to put a dam with genetic algorithms</p>
</div>
<input type=""button"" class=""btn btn-primary mb-3"" value=""Click to Display Map"" onclick=""displayGoogleMap()"" />
<div id=""myDiv"" style=""width:100%;height:400px;""></div>
<p id=""info-box""></p>
<div class=""container"">
    <div class=""row"">
        <input type=""button"" id=""sendButton"" value=""Start Algorithm"" />
    </div>
</div>
");
            EndContext();
#line 23 "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
  
    //ConcreteAggregate a = new ConcreteAggregate();
    MapAggregate maps = new MapAggregate();
    maps[0] = new Map(true, 1, 100, "maps/map.json");
    maps[1] = new Map(true, 1, 100, "maps/map10m.json");
    maps[2] = new Map(true, 1, 100, "maps/map25m.json");
    maps[3] = new Map(true, 1, 100, "maps/map25m2.json");
    Iterator mapIterator = maps.CreateIterator();

#line default
#line hidden
            BeginContext(1157, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 33 "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
 if (SignInManager.IsSignedIn(User))
{

#line default
#line hidden
            BeginContext(1200, 255, true);
            WriteLiteral("    <nav>\r\n        <ul class=\"pagination\">\r\n            <li class=\"page-item\"><a class=\"page-link\" onclick=\"nextMap()\">Previous</a></li>\r\n            <li class=\"page-item\"><a class=\"page-link\" onclick=\"nextMap()\">Next</a></li>\r\n        </ul>\r\n    </nav>\r\n");
            EndContext();
#line 41 "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
}
else
{

#line default
#line hidden
            BeginContext(1467, 56, true);
            WriteLiteral("    <p class=\"text-warning\">Login to run more maps</p>\r\n");
            EndContext();
#line 45 "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
}

#line default
#line hidden
            DefineSection("Scripts", async() => {
                BeginContext(1544, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1550, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fd22b401f6ee3b7ca658766bef1e926e684a73c46591", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1611, 4359, true);
                WriteLiteral(@"
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/d3/5.15.0/d3.min.js"" integrity=""sha256-m0QmIsBXcOMiETRmpT3qg2IQ/i0qazJA2miCHzOmS1Y="" crossorigin=""anonymous""></script>
    <script>
        function nextMap(page) {

            displayGoogleMap();
        }
        var MapBounds;
        var map;
        function displayGoogleMap() {
            // Init map
            map = new google.maps.Map(document.getElementById('myDiv'), {
                zoom: 6,
                center: { lat: 40.687, lng: -1.996 }
            });
            // Set initial bounds
            bounds = new google.maps.LatLngBounds();
            // Load icons of the markers
            var icons = {
                dam: {
                    icon: ""/res/dam_red.png""
                },
                good: {
                    icon: ""/res/good-spot.png""
                }
            };


            // Load GeoJSON
            mapJson(map)
            // Custom the map colors
            map.data.");
                WriteLiteral(@"setStyle(function (feature) {
                var color = feature.getProperty('stroke');
                return {
                    clickable: true,
                    fillColor: color,
                    strokeWeight: 1
                }
            });

            // Point of the marker
            var point = {
                position: new google.maps.LatLng(40.687, -1.996),
                type: 'dam'
            };
            // Display the marker
            marker = placeMarker(point.position, icons, point.type);


            // Center map in the middle
            map.data.addListener('addfeature', function (e) {
                processPoints(e.feature.getGeometry(), bounds.extend, bounds);
                MapBounds = bounds;
                console.log(bounds)
                map.setCenter(bounds.getCenter());
                map.fitBounds(bounds);
                changeMarkerPosition(marker, map.center);
            });
            map.fitBounds(bounds);
         ");
                WriteLiteral(@"   map.panToBounds(bounds);

            // Get data from the layers
            map.data.addListener('mouseover', function (event) {
                document.getElementById('info-box').textContent =
                    event.feature.getProperty('elevation')+event.latLng;
            });

            // Change marker position
            map.data.addListener('click', function (event) {
                changeMarkerPosition(marker, event.latLng);
                floodMap(map,event.feature.getProperty('elevation'));
            });

        }

        // Reset map colours
        function restartMap(map) {
            map.data.setStyle(function (feature) {
                var color = feature.getProperty('stroke');
                return {
                    clickable: true,
                    fillColor: color,
                    strokeWeight: 1
                }
            });
        }
        // Add water layer
        function floodMap(map, elevation) {
            restartMap(");
                WriteLiteral(@"map);
            map.data.setStyle(function (feature) {
                var color = feature.getProperty('stroke');
                var polygon = feature.getGeometry();
                var area = google.maps.geometry.spherical.computeArea(polygon);
                console.log(area);
                if (feature.getProperty(""elevation"") <= parseInt(elevation)) {
                    color = ""#08006C"";
                }
                return {
                    clickable: true,
                    fillColor: color,
                    strokeWeight: 1
                }
            });
        }
        // Process the points to center the map
            function processPoints(geometry, callback, thisArg) {
            if (geometry instanceof google.maps.LatLng) {
                callback.call(thisArg, geometry);
            } else if (geometry instanceof google.maps.Data.Point) {
                callback.call(thisArg, geometry.get());
            } else {
                geometry.getArray");
                WriteLiteral(@"().forEach(function (g) {
                    processPoints(g, callback, thisArg);
                });
            }
        }
        // Load GeoJson Map and calculate area
        function mapJson(map) {
              map.data.loadGeoJson(
            """);
                EndContext();
                BeginContext(5971, 33, false);
#line 166 "C:\Users\Alvarohf\source\repos\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
        Write(mapIterator.CurrentItem.MapString);

#line default
#line hidden
                EndContext();
                BeginContext(6004, 3110, true);
                WriteLiteral(@""", {},
            function(features) {
              map.data.forEach(function(feature) {
                if (feature.getGeometry().getType() == ""Polygon"") {
                  var bounds = [];
                  var polyBnds = new google.maps.LatLngBounds();

                  feature.getGeometry().forEachLatLng(function(path) {
                    bounds.push(path);
                    polyBnds.extend(path);
                  });
                  var area = google.maps.geometry.spherical.computeArea(bounds);
                    console.log(""area:""+area);

                  var iW = new google.maps.InfoWindow({
                    content: Math.round(area,2) + "" sq meters"",
                    position: polyBnds.getCenter()
                  });
                  iW.open(map);
                }
              });

    });
        }
        // Set a marker in the map
        function placeMarker(location, icons, typeIcon) {
            return new google.maps.Marker({
                ");
                WriteLiteral(@"position: location,
                icon: icons[typeIcon].icon,
                map: map
            });
        }
        // Update marker in the map
        function changeMarkerPosition(marker, location) {
            marker.setPosition(location);
        }

                // Get elevation
        function getElevation(lat,lng) {
            map.data.forEach(function (feature) {
                console.log(d3.geoContains(feature.getGeometry().getCoordinates(), [lat, lng]))
                console.log(d3.geoContains(feature.getGeometry(), [lng,lat]))
                if (d3.geoContains( feature, [lat,lng])) {
                    return feature.getProperty(""elevation"");
                } 
            });
            return -1;
        }
        // Connect to signalR to share data
        var connection = new signalR.HubConnectionBuilder().withUrl(""/chatHub"").build();

        //Disable send button until connection is established
        document.getElementById(""sendButton"").disabled ");
                WriteLiteral(@"= true;

        // Receive data from the server
        connection.on(""ReceiveMessage"", function (typeMessage, message) {
            var msg = message.replace(/&/g, ""&amp;"").replace(/</g, ""&lt;"").replace(/>/g, ""&gt;"");
            console.log(msg)
        });

        // Start connection on click
        connection.start().then(function () {
            document.getElementById(""sendButton"").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });


        // Send data to the server
        document.getElementById(""sendButton"").addEventListener(""click"", function (event) {
            var typeMessage = ""init"";
            var message = MapBounds.toString();
            message = getElevation(-2.021178487476929,40.69624760506644).toString();
            connection.invoke(""SendMessage"", typeMessage, message).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefaul");
                WriteLiteral("t();\r\n        });\r\n\r\n    </script>\r\n\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<IdentityUser> UserManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SignInManager<IdentityUser> SignInManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
