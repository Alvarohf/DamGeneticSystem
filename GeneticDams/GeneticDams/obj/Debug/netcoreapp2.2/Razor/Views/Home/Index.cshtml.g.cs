#pragma checksum "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f2d1488d6c8f5b60d60a7e43a02fa8110223e3c0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\_ViewImports.cshtml"
using GeneticDams;

#line default
#line hidden
#line 2 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\_ViewImports.cshtml"
using GeneticDams.Models;

#line default
#line hidden
#line 1 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
using GeneticDams.BLL;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f2d1488d6c8f5b60d60a7e43a02fa8110223e3c0", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f5f14f39e0ee9d323cecdcafbbffff8576e7383c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/signalr/dist/browser/signalr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(63, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(163, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 7 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Genetic Dam System";

#line default
#line hidden
            BeginContext(219, 425, true);
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Genetic Dam System <i class=""fas fa-dna""></i></h1>
    <p>This project finds the best spot in a topographic map to put a dam with genetic algorithms</p>
</div>
<input type=""button"" class=""btn btn-primary mb-3"" value=""Click to Display Map"" onclick=""startMap('maps/map.json','map_1')"" />
<div id=""myDiv"" style=""width:100%;height:400px;""></div>
<p id=""info-box""></p>
");
            EndContext();
#line 18 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
  
    //ConcreteAggregate a = new ConcreteAggregate();
    MapAggregate maps = new MapAggregate();
    maps[0] = new Map(true, 1, 100, "maps/map.json");
    maps[1] = new Map(true, 1, 100, "maps/map10m.json");
    maps[2] = new Map(true, 1, 100, "maps/map25m.json");
    maps[3] = new Map(true, 1, 100, "maps/map25m2.json");
    Iterator mapIterator = maps.CreateIterator();
    int i = 2;

#line default
#line hidden
            BeginContext(1044, 148, true);
            WriteLiteral("    <nav>\r\n        <div class=\"row\">\r\n            <ul class=\"pagination col-md-10\" id=\"mapNav\">\r\n                <li id=\"map_1\" class=\"page-item\"><a");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1192, "\"", 1227, 1);
#line 30 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 1197, mapIterator.First().MapString, 1197, 30, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1228, 80, true);
            WriteLiteral(" href=\"#\" class=\"page-link\" onclick=\"startMap(this.id,\'map_1\')\">map_1</a></li>\r\n");
            EndContext();
#line 31 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                 while (maps.Count + 1 > i)
                {

#line default
#line hidden
            BeginContext(1372, 23, true);
            WriteLiteral("                    <li");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1395, "\"", 1406, 2);
            WriteAttributeValue("", 1400, "map_", 1400, 4, true);
#line 33 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 1404, i, 1404, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1407, 21, true);
            WriteLiteral(" class=\"page-item\"><a");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1428, "\"", 1462, 1);
#line 33 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 1433, mapIterator.Next().MapString, 1433, 29, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1463, 27, true);
            WriteLiteral(" href=\"#\" class=\"page-link\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 1490, "\"", 1526, 3);
            WriteAttributeValue("", 1500, "startMap(this.id,\'map_", 1500, 22, true);
#line 33 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 1522, i, 1522, 2, false);

#line default
#line hidden
            WriteAttributeValue("", 1524, "\')", 1524, 2, true);
            EndWriteAttribute();
            BeginContext(1527, 5, true);
            WriteLiteral(">map_");
            EndContext();
            BeginContext(1533, 1, false);
#line 33 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                                                                                                                                                           Write(i);

#line default
#line hidden
            EndContext();
            BeginContext(1534, 11, true);
            WriteLiteral("</a></li>\r\n");
            EndContext();
#line 34 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
                    i++;
                }

#line default
#line hidden
            BeginContext(1590, 76, true);
            WriteLiteral("            </ul>\r\n            <button class=\"btn btn-success h-50 d-inline\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 1666, "\"", 1793, 11);
            WriteAttributeValue("", 1676, "location.href=\'", 1676, 15, true);
#line 37 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 1691, Url.Action("Download", "Home"), 1691, 31, false);

#line default
#line hidden
            WriteAttributeValue("", 1722, "?fileName=\'", 1722, 11, true);
            WriteAttributeValue(" ", 1733, "+", 1734, 2, true);
            WriteAttributeValue(" ", 1735, "getFile()+", 1736, 11, true);
            WriteAttributeValue(" ", 1746, "\'&login=\'", 1747, 10, true);
            WriteAttributeValue(" ", 1756, "+", 1757, 2, true);
            WriteAttributeValue(" ", 1758, "\'", 1759, 2, true);
#line 37 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 1760, SignInManager.IsSignedIn(User), 1760, 31, false);

#line default
#line hidden
            WriteAttributeValue("", 1791, "\'", 1791, 1, true);
            WriteAttributeValue(" ", 1792, "", 1793, 1, true);
            EndWriteAttribute();
            BeginContext(1794, 100, true);
            WriteLiteral(" download> Download <i class=\"fas fa-download\"></i></button>\r\n        </div>\r\n        \r\n    </nav>\r\n");
            EndContext();
#line 42 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
 if (ViewData["Error"] != null)
{

#line default
#line hidden
            BeginContext(1933, 272, true);
            WriteLiteral(@"    <div id=""alert"" class=""alert alert-danger"" role=""alert"">
        Error downloading your map, because you are not logged in or you have not displayed a map. <i class=""fas fa-exclamation-triangle""></i>  
        <button type=""button"" class=""close"" data-dismiss=""alert""");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 2205, "\"", 2259, 3);
            WriteAttributeValue("", 2215, "location.href=\'", 2215, 15, true);
#line 46 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
WriteAttributeValue("", 2230, Url.Action("Index", "Home"), 2230, 28, false);

#line default
#line hidden
            WriteAttributeValue("", 2258, "\'", 2258, 1, true);
            EndWriteAttribute();
            BeginContext(2260, 31, true);
            WriteLiteral(">&times;</button>\r\n    </div>\r\n");
            EndContext();
#line 48 "D:\github\DamGeneticSystem\GeneticDams\GeneticDams\Views\Home\Index.cshtml"
    {ViewData["Error"] = null;}
}

#line default
#line hidden
            BeginContext(2327, 392, true);
            WriteLiteral(@"<div class=""container"">
    <div class=""row"">
        <input type=""button"" id=""sendButton"" class=""btn btn-success mb-3"" value=""Start Algorithm"" />
        <fieldset disabled class=""col-md-10"">
            <div class=""form-group ml-3"">
                <input type=""text"" id=""result"" class=""form-control"" placeholder=""Result"">
            </div>
        </fieldset>
    </div>
</div>
");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(2737, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(2743, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f2d1488d6c8f5b60d60a7e43a02fa8110223e3c011858", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2804, 8415, true);
                WriteLiteral(@"
    <script>
        function getFile() {
            fileName = null;
            var elements = document.getElementById(""mapNav"").getElementsByTagName(""li"");
            for (var i = 0; i < elements.length; i++) {
                console.log(elements[i])
                if (elements[i].classList.contains(""active"")) {
                    fileName = elements[i].firstChild.id;
                    console.log(fileName);
                }
            }

            return fileName;
        }
        var MapBounds;
        var map;
        function startMap(name, li_id) {
            // We remove active button
            var elements = document.getElementById(""mapNav"").getElementsByTagName(""li"");
            for (var i = 0; i < elements.length; i++) {
                console.log(elements[i])
                elements[i].classList.remove(""active"");
            }
            // We add new active button
            var element = document.getElementById(li_id);
            element.classList");
                WriteLiteral(@".toggle(""active"");
            displayGoogleMap(name);
        }
        function displayGoogleMap(name) {
            // Init map
            map = new google.maps.Map(document.getElementById('myDiv'), {
                zoom: 6,
                center: { lat: 40.687, lng: -1.996 }
            });
            // Set initial bounds
            bounds = new google.maps.LatLngBounds();
            // Load icons of the markers
            var icons = {
                dam: {
                    icon: ""/res/dam_red.png""
                },
                good: {
                    icon: ""/res/good-spot.png""
                }
            };

            // Load GeoJSON
            mapJson(map, name)
            // Custom the map colors
            map.data.setStyle(function (feature) {
                var color = feature.getProperty('stroke');
                return {
                    clickable: true,
                    fillColor: color,
                    strokeWeight: 1
       ");
                WriteLiteral(@"         }
            });

            // Point of the marker
            var point = {
                position: new google.maps.LatLng(40.687, -1.996),
                type: 'dam'
            };
            // Display the marker
            marker = placeMarker(point.position, icons, point.type);


            // Center map in the middle
            map.data.addListener('addfeature', function (e) {
                processPoints(e.feature.getGeometry(), bounds.extend, bounds);
                MapBounds = bounds;
                map.setCenter(bounds.getCenter());
                map.fitBounds(bounds);
                changeMarkerPosition(marker, map.center);
            });
            map.fitBounds(bounds);
            map.panToBounds(bounds);
            console.log(bounds)
            // Get data from the layers
            map.data.addListener('mouseover', function (event) {
                document.getElementById('info-box').textContent =
                    event.feature.getPr");
                WriteLiteral(@"operty('elevation') + event.latLng;
            });

            // Change marker position
            map.data.addListener('click', function (event) {
                changeMarkerPosition(marker, event.latLng);
                floodMap(map, event.feature.getProperty('elevation'));
            });

        }

        // Reset map colours
        function restartMap(map) {
            map.data.setStyle(function (feature) {
                var color = feature.getProperty('stroke');
                return {
                    clickable: true,
                    fillColor: color,
                    strokeWeight: 1
                }
            });
        }
        // Add water layer
        function floodMap(map, elevation) {
            restartMap(map);
            map.data.setStyle(function (feature) {
                var color = feature.getProperty('stroke');
                var polygon = feature.getGeometry();
                var area = google.maps.geometry.spherical.computeAre");
                WriteLiteral(@"a(polygon);
                console.log(area);
                if (feature.getProperty(""elevation"") <= parseInt(elevation)) {
                    color = ""#08006C"";
                }
                return {
                    clickable: true,
                    fillColor: color,
                    strokeWeight: 1
                }
            });
        }
        // Process the points to center the map
        function processPoints(geometry, callback, thisArg) {
            if (geometry instanceof google.maps.LatLng) {
                callback.call(thisArg, geometry);
            } else if (geometry instanceof google.maps.Data.Point) {
                callback.call(thisArg, geometry.get());
            } else {
                geometry.getArray().forEach(function (g) {
                    processPoints(g, callback, thisArg);
                });
            }
        }
        // Load GeoJson Map and calculate area
        function mapJson(map, name) {
            console.log(do");
                WriteLiteral(@"cument.location.origin + ""/"" + name)
            map.data.loadGeoJson(
                document.location.origin + ""/"" + name, {},
                function (features) {
                    map.data.forEach(function (feature) {
                        if (feature.getGeometry().getType() == ""Polygon"") {
                            var bounds = [];
                            var polyBnds = new google.maps.LatLngBounds();

                            feature.getGeometry().forEachLatLng(function (path) {
                                bounds.push(path);
                                polyBnds.extend(path);
                            });
                            var area = google.maps.geometry.spherical.computeArea(bounds);
                            console.log(""area:"" + area);

                            var iW = new google.maps.InfoWindow({
                                content: Math.round(area, 2) + "" sq meters"",
                                position: polyBnds.getCenter()
       ");
                WriteLiteral(@"                     });
                            iW.open(map);
                        }
                    });

                });
        }
        // Set a marker in the map
        function placeMarker(location, icons, typeIcon) {
            return new google.maps.Marker({
                position: location,
                icon: icons[typeIcon].icon,
                map: map
            });
        }
        // Update marker in the map
        function changeMarkerPosition(marker, location) {
            marker.setPosition(location);
        }

        // Connect to signalR to share data
        var connection = new signalR.HubConnectionBuilder().withUrl(""/chatHub"").build();

        //Disable send button until connection is established
        document.getElementById(""sendButton"").disabled = true;

        // Receive data from the server
        connection.on(""ReceiveMessage"", function (typeMessage, message) {
            var msg = message.replace(/&/g, ""&amp;"").replac");
                WriteLiteral(@"e(/</g, ""&lt;"").replace(/>/g, ""&gt;"");
            document.getElementById(""result"").value = message;
            console.log(msg)

        });

        // Start connection on click
        connection.start().then(function () {
            document.getElementById(""sendButton"").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });


        // Send data to the server
        document.getElementById(""sendButton"").addEventListener(""click"", function (event) {
            var typeMessage = ""init"";
            console.log(MapBounds)
            if (MapBounds !== undefined) {
                document.getElementById(""result"").classList.remove(""text-danger"");
                var message = MapBounds.toString();
                connection.invoke(""SendMessage"", typeMessage, message).catch(function (err) {
                    return console.error(err.toString());
                });
            } else {
                document.getElement");
                WriteLiteral("ById(\"result\").classList.add(\"text-danger\");\r\n                document.getElementById(\"result\").value = \"You need to load the map first\";\r\n            }\r\n            event.preventDefault();\r\n        });\r\n\r\n    </script>\r\n\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<IdentityUser> UserManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SignInManager<IdentityUser> SignInManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
